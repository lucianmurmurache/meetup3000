{"version":3,"sources":["NumberOfEvents.js","mock-events.js","api.js","CitySearch.js","Event.js","EventList.js","App.js","serviceWorker.js","index.js"],"names":["NumberOfEvents","state","query","handleInputChanged","event","value","target","setState","props","updateEvents","className","type","id","placeholder","this","onChange","Component","mockEvents","created","duration","name","rsvp_limit","date_in_series_pattern","status","time","local_date","local_time","updated","utc_offset","waitlist_count","yes_rsvp_count","venue","lat","lon","repinned","address_1","address_2","city","country","localized_country_name","group","join_mode","urlname","who","localized_location","region","timezone","link","description","how_to_find_us","visibility","member_pay_fee","getAccessToken","a","accessToken","localStorage","getItem","searchParams","URLSearchParams","window","location","search","code","get","href","getOrRenewAccessToken","lastSavedTime","Date","now","refreshToken","key","url","axios","tokenInfo","setItem","data","access_token","refresh_token","getEvents","page","startsWith","token","result","events","getSuggestions","name_string","zip","CitySearch","suggestions","then","handleItemClicked","map","item","onClick","Event","showDetails","handleShowDetails","EventList","App","console","log","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","atatus","install"],"mappings":"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","file":"static/js/main.1fd32bf4.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass NumberOfEvents extends Component {\n    state = {\n        query: 32\n    }\n\n    handleInputChanged = (event) => {\n        const value = event.target.value;\n        this.setState({ query: value });\n        this.props.updateEvents(null, null, value);\n    }\n\n    render() {\n        return (\n            <div className=\"numberOfEvents\">\n                <label>Number of results</label>\n                <input\n                    type=\"text\"\n                    id=\"numberOfEventsInput\"\n                    placeholder=\"32\"\n                    value={this.state.query}\n                    onChange={this.handleInputChanged}\n                />\n            </div>\n        );\n    }\n}\n\nexport default NumberOfEvents;","const mockEvents = {\r\n    city: {\r\n        id: 1007700,\r\n        city: 'München',\r\n        lat: 48.14,\r\n        lon: 11.58,\r\n        state: '',\r\n        country: 'de',\r\n        zip: 'meetup3',\r\n        member_count: 1257\r\n    },\r\n    events: [\r\n        {\r\n            created: 1581676443000,\r\n            duration: 5400000,\r\n            id: '268705764',\r\n            name: 'Running Kubernetes on Azure',\r\n            rsvp_limit: 80,\r\n            date_in_series_pattern: false,\r\n            status: 'upcoming',\r\n            time: 1583429400000,\r\n            local_date: '2020-03-05',\r\n            local_time: '18:30',\r\n            updated: 1581927279000,\r\n            utc_offset: 3600000,\r\n            waitlist_count: 0,\r\n            yes_rsvp_count: 36,\r\n            venue: {\r\n                id: 25766821,\r\n                name: 'medialesson - Büro München',\r\n                lat: 48.153099060058594,\r\n                lon: 11.583580017089844,\r\n                repinned: true,\r\n                address_1: 'Leopoldstr. 8-10',\r\n                address_2: 'c/o Nutrion Coworking Space',\r\n                city: 'München',\r\n                country: 'de',\r\n                localized_country_name: 'Germany'\r\n            },\r\n            group: {\r\n                created: 1520252901000,\r\n                name: 'Software, Technology & Design Meetup München',\r\n                id: 27731423,\r\n                join_mode: 'open',\r\n                lat: 48.13999938964844,\r\n                lon: 11.579999923706055,\r\n                urlname: 'Software-Technology-Meetup-Munchen',\r\n                who: 'Mitglieder',\r\n                localized_location: 'München, Germany',\r\n                state: '',\r\n                country: 'de',\r\n                region: 'en_US',\r\n                timezone: 'Europe/Berlin'\r\n            },\r\n            link: 'https://www.meetup.com/Software-Technology-Meetup-Munchen/events/268705764/',\r\n            description: 'In this session Mohit Chhabra will give you insights how to run real apps on the most popular container orchestrator in Azure. We’ll review a high-level overview of the Azure Kubernetes Service (AKS) service and Azure Container Registry (ACR). We will start with the basic concepts of Kubernetes followed by understanding how AKS is different from the vanilla Kubernetes. Finally we\\'ll be setting up and deploying a real world app on AKS. Feel free to follow along! Our speaker Mohit is working as Software Engineer at medialesson GmbH, Germany. He is currently Microsoft Most Valuable Professional for Microsoft Azure and former leader of BDotnet (India\\'s Biggest offline community). He has delivered more than 50 sessions in the community and international conferences. Prior to this, Mohit was Microsoft Student Partner and Mozilla Student Representative. He was also India\\'s first Azure Champion and the first person to intern in Microsoft Technology Center. This meetup will be hosted by medialesson, food and drinks will be provided. The session language is English. Please make sure you update your RSVP status 24h in advance so we don\\'t waste any food!',\r\n            how_to_find_us: 'The entry to building No. 8 is directly accessible from Leopoldstr. near Siegestor, walk down the broad spiral stairs down to the basement and enter trough the first glass door on the right hand.',\r\n            visibility: 'public',\r\n            member_pay_fee: false\r\n        },\r\n        {\r\n            created: 1581605836000,\r\n            duration: 9000000,\r\n            id: '268682611',\r\n            name: 'TW presents: Lean backends using functional Kotlin',\r\n            rsvp_limit: 140,\r\n            date_in_series_pattern: false,\r\n            status: 'upcoming',\r\n            time: 1583429400000,\r\n            local_date: '2020-03-05',\r\n            local_time: '18:30',\r\n            updated: 1581606039000,\r\n            utc_offset: 3600000,\r\n            waitlist_count: 3,\r\n            yes_rsvp_count: 140,\r\n            venue: {\r\n                id: 25852478,\r\n                name: 'ThoughtWorks Munich ',\r\n                lat: 48.135501861572266,\r\n                lon: 11.613557815551758,\r\n                repinned: true,\r\n                address_1: 'Bothestraße 11',\r\n                city: 'München',\r\n                country: 'de',\r\n                localized_country_name: 'Germany'\r\n            },\r\n            group: {\r\n                created: 1413448074000,\r\n                name: 'ThoughtWorks Munich',\r\n                id: 17658472,\r\n                join_mode: 'open',\r\n                lat: 48.13999938964844,\r\n                lon: 11.579999923706055,\r\n                urlname: 'ThoughtWorks-Muenchen',\r\n                who: 'Mitglieder',\r\n                localized_location: 'München, Germany',\r\n                state: '',\r\n                country: 'de',\r\n                region: 'en_US',\r\n                timezone: 'Europe/Berlin'\r\n            },\r\n            link: 'https://www.meetup.com/ThoughtWorks-Muenchen/events/268682611/',\r\n            description: 'Join us for our first meetup in March with our colleagues Srishti and Mario! In this talk we are going to talk about building lean backends in Kotlin, using a functional approach. The language is well suited for this, as it is pragmatic, not afraid of borrowing ideas and has a burgeoning ecosystem. Many talks focus on Android development, but we want to go in the other direction and speak about server side code. Specifically, our focus will be on small services that interact with other services using REST APIs and JSON, in a microservices ecosystem. Kotlin is already quite functional, supporting things like immutability and null safety out of the box. Starting from there we will expand on these and other patterns, like avoiding exceptions and expressing logic as a sequence of transformations, with the help of the excellent Arrow library. We will show code that runs in our production applications that is both elegant and maintainable. You will be able to adopt some of our ideas incrementally and see the benefits for yourself. ABOUT SRISHTI:Srishti is a software developer and tech enthusiast. She is passionate about clean code, problem-solving, test-driven development, and constantly learning topics that help her to develop quality software. ABOUT MARIO:Mario develops software for a living. Then he goes home and continues reading about software because he just cannot get enough.At some point, somebody thought it was a good idea to make him the technical lead of an agile team. He quickly discovered that building things himself is not the same as helping somebody else figure it out.He learned, somewhat to his surprise, that he really enjoys sharing ideas. According to their feedback, other developers have managed to learn something from Mario. At least they don\\'t tend to run away screaming, which is, as he thinks, a good thing. SNACKS:As always we are offering various snacks and, beer and soft drinks. No full meal, but something to nibble on. AGENDA:18:30 Doors open for snacks, drinks and mingle19:00 Talk and questions20:00 More questions, drinks and mingle ',\r\n            how_to_find_us: 'The entrance is right next to the entrance of the big bike shop “Stadler”. If you are standing in front of the entrance of Holiday Inn you have to go around the whole building to find our entrance.',\r\n            visibility: 'public',\r\n            member_pay_fee: false\r\n        },\r\n        {\r\n            created: 1581930400000,\r\n            duration: 12600000,\r\n            id: '268770204',\r\n            name: 'Find the common language between business and IT (with Zsófia Herendi)',\r\n            rsvp_limit: 60,\r\n            date_in_series_pattern: false,\r\n            status: 'upcoming',\r\n            time: 1583946000000,\r\n            local_date: '2020-03-11',\r\n            local_time: '18:00',\r\n            updated: 1582043298000,\r\n            utc_offset: 3600000,\r\n            waitlist_count: 0,\r\n            yes_rsvp_count: 40,\r\n            group: {\r\n                created: 1510734921000,\r\n                name: 'DDD MUC',\r\n                id: 26604821,\r\n                join_mode: 'open',\r\n                lat: 48.13999938964844,\r\n                lon: 11.579999923706055,\r\n                urlname: 'DDD-MUC',\r\n                who: 'Mitglieder',\r\n                localized_location: 'München, Germany',\r\n                state: '',\r\n                country: 'de',\r\n                region: 'en_US',\r\n                timezone: 'Europe/Berlin'\r\n            },\r\n            link: 'https://www.meetup.com/DDD-MUC/events/268770204/',\r\n            description: 'IMPORTANT:We\\'re still checking who can host this event, so there will be updates! --- Zsófia Herendi, IBM Zsófia is a product manager who has spent more than 14 years bringing developers and business people together, 10+ years working on different teams and 6+ years working in an agile environment. She is a skilled modeler with a passion for diagramming and an addiction to optimizing flow. --- Find the common language between business and IT Did you know that there are large corporates out there with hundreds of customised versions of the same ERP system built by different teams serving the same purpose? Or, have you observed shadow IT, where business departments take matters into their own hands when not getting attention in the IT department?Complex legacy architecture all too often reduce the competitive edge and business agility in large organisations, as well as becoming both more costly to maintain and expand upon. Resolving service problems takes a long time and new initiatives to fix and improve takes too long to realise, if at all.Value stream mapping and business process diagrams may provide some insight, but they will not necessarily give you the proper context as duplications and bias in your ecosystem often is well hidden. You lack the necessary situational awareness.When walking out of this session you will have the tools needed to gain a holistic view of your company, including the ability to map out IT’s current situation. ',\r\n            visibility: 'public',\r\n            member_pay_fee: false\r\n        }\r\n    ]\r\n};\r\n\r\nexport { mockEvents };","import axios from 'axios';\nimport { mockEvents } from './mock-events';\n\nasync function getAccessToken() {\n    const accessToken = localStorage.getItem('access_token');\n\n    if (!accessToken) {\n        const searchParams = new URLSearchParams(window.location.search);\n        const code = searchParams.get('code');\n\n        if (!code) {\n            window.location.href = 'https://secure.meetup.com/oauth2/authorize?client_id=he1k2l2636m6akrde4o968joim&response_type=code&redirect_uri=https://lucianmurmurache.github.io/meetup3000/';\n\n            return null;\n        }\n        return getOrRenewAccessToken('get', code);\n    }\n\n    const lastSavedTime = localStorage.getItem('last_saved_time');\n\n    if (accessToken && (Date.now() - lastSavedTime < 3600000)) {\n        return accessToken;\n    }\n\n    // If accessToken is expired, renew it by using refresh_token\n    const refreshToken = localStorage.getItem('refresh_token');\n    return getOrRenewAccessToken('renew', refreshToken);\n}\n\nasync function getOrRenewAccessToken(type, key) {\n    let url;\n    if (type === 'get') {\n        //Lambda endpoint to get token by code\n        url = 'https://wy7dt8cy34.execute-api.eu-central-1.amazonaws.com/dev/api/token/' + key;\n    } else if (type === 'renew') {\n        //Lambda endpoint to get token by refresh_token\n        url = 'https://wy7dt8cy34.execute-api.eu-central-1.amazonaws.com/dev/api/refresh/' + key;\n    }\n\n    //Use axios to make a GET request to the endpoint\n    const tokenInfo = await axios.get(url);\n\n    // Save tokens to localStorage together with timestamp\n    localStorage.setItem('access_token', tokenInfo.data.access_token);\n    localStorage.setItem('refresh_token', tokenInfo.data.refresh_token);\n    localStorage.setItem('last_saved_time', Date.now());\n\n    //return the access_token\n    return tokenInfo.data.access_token;\n}\n\n\nasync function getEvents(lat, lon, page) {\n    if (window.location.href.startsWith('http://localhost')) {\n        return mockEvents.events;\n    }\n\n    const token = await getAccessToken();\n    if (token) {\n        let url = 'https://api.meetup.com/find/upcoming_events?&sign=true&photo-host=public'\n            + '&access_token='\n            + token;\n\n        if (lat && lon) {\n            url += '&lat=' + lat + '&lon=' + lon;\n        }\n        if (page) {\n            url += '&page=' + page;\n        }\n        const result = await axios.get(url);\n        return result.data.events;\n    }\n}\n\nasync function getSuggestions(query) {\n    if (window.location.href.startsWith('http://localhost')) {\n        return [\n            {\n                city: 'Munich',\n                country: 'de',\n                localized_country_name: 'Germany',\n                name_string: 'Munich, Germany',\n                zip: 'meetup3',\n                lat: 48.14,\n                lon: 11.58\n            },\n            {\n                city: 'Munich',\n                country: 'us',\n                localized_country_name: 'USA',\n                state: 'ND',\n                name_string: 'Munich, North Dakota, USA',\n                zip: '58352',\n                lat: 48.66,\n                lon: -98.85\n            }\n        ];\n    }\n\n    const token = await getAccessToken();\n    if (token) {\n        const url = 'https://api.meetup.com/find/locations?&sign=true&photo-host=public&query='\n            + query\n            + '&access_token='\n            + token;\n        const result = await axios.get(url);\n        return result.data;\n    }\n    return [];\n}\n\nexport { getSuggestions, getEvents };","import React, { Component } from 'react';\r\nimport { getSuggestions } from './api';\r\n\r\nclass CitySearch extends Component {\r\n\r\n    state = {\r\n        query: '',\r\n        suggestions: []\r\n    }\r\n\r\n    handleInputChanged = (event) => {\r\n        const value = event.target.value;\r\n        this.setState({ query: value });\r\n        getSuggestions(value).then(suggestions => this.setState({ suggestions }));\r\n    }\r\n\r\n    handleItemClicked = (value, lat, lon) => {\r\n        this.setState({ query: value, suggestions: [] });\r\n        this.props.updateEvents(lat, lon);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"CitySearch\">\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"city\"\r\n                    placeholder=\"Search for a location...\"\r\n                    value={this.state.query}\r\n                    onChange={this.handleInputChanged}\r\n                />\r\n                <ul className=\"suggestions\">\r\n                    {this.state.suggestions.map(item =>\r\n                        <li\r\n                            key={item.name_string}\r\n                            onClick={() => this.handleItemClicked(item.name_string, item.lat, item.lon)}\r\n                        >\r\n                            {item.name_string}\r\n                        </li>\r\n                    )}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CitySearch;","import React, { Component } from 'react';\r\n\r\nclass Event extends Component {\r\n    state = {\r\n        event: {},\r\n        showDetails: false\r\n    }\r\n\r\n    handleShowDetails = () => {\r\n        if (!this.state.showDetails) {\r\n            this.setState({ showDetails: true });\r\n        } else {\r\n            this.setState({ showDetails: false });\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const showDetails = this.state.showDetails;\r\n\r\n        return (\r\n            <div className=\"event\">\r\n                <div className=\"event-overview\">\r\n                    <p className=\"event-overview-name\">{this.props.event.name}</p>\r\n                    <p className=\"event-overview-date\"><span>Event date: </span>{this.props.event.local_date}</p>\r\n                    <p className=\"event-overview-time\"><span>Event time: </span>{this.props.event.local_time}</p>\r\n                    <button className=\"event-details-btn\" onClick={() => this.handleShowDetails()}>Show more</button>\r\n                </div>\r\n                {showDetails &&\r\n                    <div className=\"event-details\">\r\n                        <p className=\"event-details-venue\"><span>Venue name: </span>{this.props.event.venue && this.props.event.venue.name}</p>\r\n                        <p className=\"event-details-max\"><span>Max capacity: </span>{this.props.event.rsvp_limit}</p>\r\n                        <p className=\"event-details-going\"><span>Going: </span>{this.props.event.yes_rsvp_count}</p>\r\n                        <p className=\"event-details-waitlist\"><span>Waitlist: </span>{this.props.event.waitlist_count}</p>\r\n                        <p className=\"event-details-description\">{this.props.event.description}</p>\r\n                    </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Event;","import React, { Component } from 'react';\r\nimport Event from './Event';\r\n\r\nclass EventList extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <ul className=\"EventList\">\r\n        {this.props.events.map(event =>\r\n          <li key={event.id}>\r\n            <Event event={event} />\r\n          </li>\r\n        )}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EventList;","import React, { Component } from 'react';\n\nimport NumberOfEvents from './NumberOfEvents';\nimport CitySearch from './CitySearch';\nimport EventList from './EventList';\nimport { getEvents } from './api';\nimport './App.css';\n\nclass App extends Component {\n\n  state = {\n    events: [],\n    page: 32,\n    lat: null,\n    lon: null\n  }\n\n  componentDidMount() {\n    this.updateEvents();\n  }\n\n  updateEvents = (lat, lon, page) => {\n    if (lat && lon) {\n      getEvents(lat, lon, this.state.page).then(events => this.setState({ events, lat, lon }));\n    } else if (page) {\n      getEvents(this.state.lat, this.state.lon, page).then(events => this.setState({ events, page }));\n    } else {\n      console.log(\"nothing changed, nothing to update\");\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\" >\n        <h1>Meetup3000</h1>\n\n        <CitySearch updateEvents={this.updateEvents} />\n\n        <NumberOfEvents updateEvents={this.updateEvents} />\n\n        <EventList events={this.state.events} />\n\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport * as atatus from 'atatus-spa';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\natatus.config('bd058f834d8445a4b0e1db819a318dee').install();"],"sourceRoot":""}